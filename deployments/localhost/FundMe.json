{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "available",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "required",
          "type": "uint256"
        }
      ],
      "name": "FundMe__InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__SendingFailed",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmoutFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x864719c325d5bd47910701e190c045b78e983a289d49cde6fb5170e018d8197f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "801714",
    "logsBloom": "0x
    "blockHash": "0x4432d35a5b96054db5dcd36c40f99f5518ca81cdb9566f27f70160a858a68ee8",
    "transactionHash": "0x864719c325d5bd47910701e190c045b78e983a289d49cde6fb5170e018d8197f",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "801714",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "c389d117b051da7fff19170d65b9a0fc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"FundMe__InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__SendingFailed\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmoutFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n//769,283\\n//748,041 - constant\\n//738,687 - immutable\\n//713,552 - error - not owner\\n//674,796 - error 2\\n\\n\\nerror FundMe__NotOwner();\\nerror FundMe__InsufficientBalance(uint256 available, uint256 required);\\nerror FundMe__SendingFailed();\\n\\ncontract FundMe {\\n\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 15 * 1e18;\\n    address[] public funders;\\n    mapping (address => uint256) public addressToAmoutFunded;\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n\\n    modifier onlyOwner() {\\n        if(msg.sender != i_owner)\\n            revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // if someone send money without calling the fund method using the contract address\\n    receive() external payable { fund(); }\\n    fallback() external payable { fund(); }\\n\\n    function fund() public payable {\\n        // require(msg.value.getConversionRate() >= MINIMUM_USD, \\\"Did not send enough money\\\");\\n        if(msg.value.getConversionRate(priceFeed) < MINIMUM_USD)\\n            revert FundMe__InsufficientBalance({\\n                available: msg.value.getConversionRate(priceFeed),\\n                required: MINIMUM_USD\\n            });\\n \\n        funders.push(msg.sender);\\n        addressToAmoutFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        //reset addressTofunderIndex\\n        for(uint256 funderIndex; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            addressToAmoutFunded[funder] = 0;\\n        }\\n\\n        //reset funder\\n        funders = new address[](0);\\n        \\n        // //withdraw ways:\\n        // //1. transfer\\n        //     //msg.sender = address\\n        //     //payyable(msg.sender) = payable address \\n        // payable(msg.sender).transfer(address(this).balance); //throw error when faild 2.3k gas\\n        // //2. send\\n        // bool successSend = payable(msg.sender).send(address(this).balance); //2.3 gas; return bool\\n        // require(successSend, \\\"Send Faild!\\\");\\n        //3. call\\n        (bool successCall,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        // require(successCall, \\\"Send Failed!\\\");\\n        if(!successCall) revert FundMe__SendingFailed();\\n    }\\n\\n    function getPriceFeed() public view  returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n}\\n\\n/*\\n*  Notes:\\n-   use  constant when you set the value at init\\n    use immutable when you send the value in the s2nd init and it will never change later\\n    - msg.sender avalable only inside a function.\\n*/\",\"keccak256\":\"0x1b55809b52572cca2a5db0ef90faad6cb9ce1c49af8dd86831b314917c7ef5c6\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n// import \\\"./AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    /**\\n    * Network: Sepolia\\n    * Data Feed: ETH/USD\\n    * Address: 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    */\\n\\n    // function getDecimals() internal view returns (uint8) {\\n    //     AggregatorV3Interface dataFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n    //     return dataFeed.decimals();\\n    // }\\n\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // AggregatorV3Interface dataFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        (, int256 price,,,) = priceFeed.latestRoundData();\\n        //since it have 8 decimal we add 10 to be 18 like msg.value\\n        return uint256(price) * 10**10;\\n    }\\n\\n    function getConversionRate(uint256 ethAmout, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // uint256 ethPrice = getPrice();\\n        return (getPrice(priceFeed) * ethAmout) / 1e18;\\n    }\\n}\",\"keccak256\":\"0xa89942f9e18adac1d5906033f4c8f40ffaa64d67c5492d3f84cd341b86408357\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610e7e380380610e7e833981810160405281019061003291906100c5565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100bf81610129565b92915050565b6000602082840312156100db576100da610124565b5b60006100e9848285016100b0565b91505092915050565b60006100fd82610104565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610132816100f2565b811461013d57600080fd5b50565b60805160601c610d196101656000396000818161035b01526106060152610d196000f3fe60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610130578063cb78e6e11461013a578063dba6335f14610177578063dc0d3dff146101a25761008e565b80633ccfd60b146100985780636b69a592146100af578063741bef1a146100da5780639e87a5cd146101055761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610359565b005b3480156100bb57600080fd5b506100c4610590565b6040516100d191906109b8565b60405180910390f35b3480156100e657600080fd5b506100ef61059c565b6040516100fc919061099d565b60405180910390f35b34801561011157600080fd5b5061011a6105c2565b604051610127919061099d565b60405180910390f35b6101386101df565b005b34801561014657600080fd5b50610161600480360381019061015c9190610848565b6105ec565b60405161016e91906109b8565b60405180910390f35b34801561018357600080fd5b5061018c610604565b6040516101999190610982565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c49190610875565b610628565b6040516101d69190610982565b60405180910390f35b67d02ab486cedc000061021d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066790919063ffffffff16565b101561029e57610258600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066790919063ffffffff16565b67d02ab486cedc00006040517f642f64a60000000000000000000000000000000000000000000000000000000081526004016102959291906109d3565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103509190610a07565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103de576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561048957600080828154811061040357610402610c21565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061048190610b7a565b9150506103e1565b50600067ffffffffffffffff8111156104a5576104a4610c50565b5b6040519080825280602002602001820160405280156104d35781602001602082028036833780820191505090505b50600090805190602001906104e9929190610738565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105109061096d565b60006040518083038185875af1925050503d806000811461054d576040519150601f19603f3d011682016040523d82523d6000602084013e610552565b606091505b505090508061058d576040517faf48c02100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b67d02ab486cedc000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061063857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000670de0b6b3a76400008361067c84610698565b6106869190610a8e565b6106909190610a5d565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106e157600080fd5b505afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071991906108a2565b5050509150506402540be400816107309190610a8e565b915050919050565b8280548282559060005260206000209081019282156107b1579160200282015b828111156107b05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610758565b5b5090506107be91906107c2565b5090565b5b808211156107db5760008160009055506001016107c3565b5090565b6000813590506107ee81610c87565b92915050565b60008151905061080381610c9e565b92915050565b60008135905061081881610cb5565b92915050565b60008151905061082d81610cb5565b92915050565b60008151905061084281610ccc565b92915050565b60006020828403121561085e5761085d610c7f565b5b600061086c848285016107df565b91505092915050565b60006020828403121561088b5761088a610c7f565b5b600061089984828501610809565b91505092915050565b600080600080600060a086880312156108be576108bd610c7f565b5b60006108cc88828901610833565b95505060206108dd888289016107f4565b94505060406108ee8882890161081e565b93505060606108ff8882890161081e565b925050608061091088828901610833565b9150509295509295909350565b61092681610ae8565b82525050565b61093581610b44565b82525050565b60006109486000836109fc565b915061095382610c84565b600082019050919050565b61096781610b24565b82525050565b60006109788261093b565b9150819050919050565b6000602082019050610997600083018461091d565b92915050565b60006020820190506109b2600083018461092c565b92915050565b60006020820190506109cd600083018461095e565b92915050565b60006040820190506109e8600083018561095e565b6109f5602083018461095e565b9392505050565b600081905092915050565b6000610a1282610b24565b9150610a1d83610b24565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a5257610a51610bc3565b5b828201905092915050565b6000610a6882610b24565b9150610a7383610b24565b925082610a8357610a82610bf2565b5b828204905092915050565b6000610a9982610b24565b9150610aa483610b24565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610add57610adc610bc3565b5b828202905092915050565b6000610af382610b04565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610b4f82610b56565b9050919050565b6000610b6182610b68565b9050919050565b6000610b7382610b04565b9050919050565b6000610b8582610b24565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bb857610bb7610bc3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b610c9081610ae8565b8114610c9b57600080fd5b50565b610ca781610afa565b8114610cb257600080fd5b50565b610cbe81610b24565b8114610cc957600080fd5b50565b610cd581610b2e565b8114610ce057600080fd5b5056fea26469706673582212205d5935bc78a4916c5ba7b884b77a0a8ab03e5737a4d5001d99b622c1e0da931264736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610130578063cb78e6e11461013a578063dba6335f14610177578063dc0d3dff146101a25761008e565b80633ccfd60b146100985780636b69a592146100af578063741bef1a146100da5780639e87a5cd146101055761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610359565b005b3480156100bb57600080fd5b506100c4610590565b6040516100d191906109b8565b60405180910390f35b3480156100e657600080fd5b506100ef61059c565b6040516100fc919061099d565b60405180910390f35b34801561011157600080fd5b5061011a6105c2565b604051610127919061099d565b60405180910390f35b6101386101df565b005b34801561014657600080fd5b50610161600480360381019061015c9190610848565b6105ec565b60405161016e91906109b8565b60405180910390f35b34801561018357600080fd5b5061018c610604565b6040516101999190610982565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c49190610875565b610628565b6040516101d69190610982565b60405180910390f35b67d02ab486cedc000061021d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066790919063ffffffff16565b101561029e57610258600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066790919063ffffffff16565b67d02ab486cedc00006040517f642f64a60000000000000000000000000000000000000000000000000000000081526004016102959291906109d3565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103509190610a07565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103de576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561048957600080828154811061040357610402610c21565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061048190610b7a565b9150506103e1565b50600067ffffffffffffffff8111156104a5576104a4610c50565b5b6040519080825280602002602001820160405280156104d35781602001602082028036833780820191505090505b50600090805190602001906104e9929190610738565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105109061096d565b60006040518083038185875af1925050503d806000811461054d576040519150601f19603f3d011682016040523d82523d6000602084013e610552565b606091505b505090508061058d576040517faf48c02100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b67d02ab486cedc000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061063857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000670de0b6b3a76400008361067c84610698565b6106869190610a8e565b6106909190610a5d565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106e157600080fd5b505afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071991906108a2565b5050509150506402540be400816107309190610a8e565b915050919050565b8280548282559060005260206000209081019282156107b1579160200282015b828111156107b05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610758565b5b5090506107be91906107c2565b5090565b5b808211156107db5760008160009055506001016107c3565b5090565b6000813590506107ee81610c87565b92915050565b60008151905061080381610c9e565b92915050565b60008135905061081881610cb5565b92915050565b60008151905061082d81610cb5565b92915050565b60008151905061084281610ccc565b92915050565b60006020828403121561085e5761085d610c7f565b5b600061086c848285016107df565b91505092915050565b60006020828403121561088b5761088a610c7f565b5b600061089984828501610809565b91505092915050565b600080600080600060a086880312156108be576108bd610c7f565b5b60006108cc88828901610833565b95505060206108dd888289016107f4565b94505060406108ee8882890161081e565b93505060606108ff8882890161081e565b925050608061091088828901610833565b9150509295509295909350565b61092681610ae8565b82525050565b61093581610b44565b82525050565b60006109486000836109fc565b915061095382610c84565b600082019050919050565b61096781610b24565b82525050565b60006109788261093b565b9150819050919050565b6000602082019050610997600083018461091d565b92915050565b60006020820190506109b2600083018461092c565b92915050565b60006020820190506109cd600083018461095e565b92915050565b60006040820190506109e8600083018561095e565b6109f5602083018461095e565b9392505050565b600081905092915050565b6000610a1282610b24565b9150610a1d83610b24565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a5257610a51610bc3565b5b828201905092915050565b6000610a6882610b24565b9150610a7383610b24565b925082610a8357610a82610bf2565b5b828204905092915050565b6000610a9982610b24565b9150610aa483610b24565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610add57610adc610bc3565b5b828202905092915050565b6000610af382610b04565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610b4f82610b56565b9050919050565b6000610b6182610b68565b9050919050565b6000610b7382610b04565b9050919050565b6000610b8582610b24565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bb857610bb7610bc3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b610c9081610ae8565b8114610c9b57600080fd5b50565b610ca781610afa565b8114610cb257600080fd5b50565b610cbe81610b24565b8114610cc957600080fd5b50565b610cd581610b2e565b8114610ce057600080fd5b5056fea26469706673582212205d5935bc78a4916c5ba7b884b77a0a8ab03e5737a4d5001d99b622c1e0da931264736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmoutFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 78,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}